# .github/workflows/ci.yml
name: Rust CI

on:
  push:          { branches: [master] }
  pull_request:  { branches: [master] }

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test-lint:
    runs-on: ubuntu-latest

    services:
      pg:
        image: postgres:15
        env:
          POSTGRES_USER: ci
          POSTGRES_PASSWORD: ci
          POSTGRES_DB: rustraptor_ci
        ports: [ '5432:5432' ]
        options: >-
          --health-cmd="pg_isready -U ci"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    # ── Secrets become env-vars visible to *all* steps
    env:
      DATABASE_URL: ${{ secrets.PG_URL }}
      REDIS_URL:    ${{ secrets.REDIS_URL }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Rust toolchain + clippy + fmt
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy, rustfmt
          override: true

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: rustfmt
        run: cargo fmt --check

      - name: clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Install sqlx-cli
        run: cargo install sqlx-cli --no-default-features --features postgres

      - name: Run migrations
        run: sqlx migrate run --database-url "$DATABASE_URL"

      - name: Test suite
        run: cargo test --all-features --verbose
